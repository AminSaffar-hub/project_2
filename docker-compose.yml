version: '3.7'

services:
  db:
  # based https://github.com/synaptic-cl/django-postgres-docker-compose
    image: postgres:14-alpine
    environment:
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - '5400:5400'
    command: -p 5400

  web:
    build: .
    command: >
      sh -c 'poetry run python manage.py runserver 0.0.0.0:8000'
    environment:
      - APP_ENV=prod
    volumes:
      - static_volume:/www/
    depends_on:
      - migration
      - db
    ports:
      - '8000:8000'

  # scrapping:
  #   build: .
  #   command: >
  #     sh -c 'echo "1 * * * * echo hello world!" | crontab - &&
  #            cron -f'

  migration:
    build: .
    environment:
      - APP_ENV=prod
    # based on https://github.com/alesandroLang/docker-django/issues/4
    volumes:
      - static_volume:/www/
    command: >
      sh -c 'poetry run python manage.py collectstatic --no-input --clear || exit 1

      poetry run python manage.py migrate --noinput || exit 1'
    depends_on:
      - db

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/www/
    ports:
      - 80:80
    depends_on:
      - web


volumes:
  postgres_data:
  static_volume:

