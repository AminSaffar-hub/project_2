version: '3.7'

services:
  db:
  # based https://github.com/synaptic-cl/django-postgres-docker-compose
    image: postgres:14-alpine
    env_file:
      - ./.env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - '5400:5400'
    command: -p 5400

  web:
    build: .
    command: >
      sh -c 'poetry run gunicorn --bind 0.0.0.0:8000 wsgi'
    env_file:
      - ./.env
    volumes:
      - static_volume:/www/
    depends_on:
      - migration
      - db
    links:
      - db:db
    ports:
      - '8000:8000'
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.runscrappers.schedule: "0 1 * * *"
      ofelia.job-exec.runscrappers.command: "poetry run python manage.py crawl"

  migration:
    build: .
    env_file:
      - ./.env
    # based on https://github.com/alesandroLang/docker-django/issues/4
    volumes:
      - static_volume:/www/
    command: >
      sh -c 'poetry run python manage.py collectstatic --no-input --clear || exit 1

      poetry run python manage.py migrate --noinput || exit 1'
    depends_on:
      - db

  nginx:
    build: ./nginx
    ports:
      - 80:80
      - 443:443
    depends_on:
      - web
    volumes:
      - static_volume:/www/
      - ~/certbot/www:/var/www/certbot/:ro
      - ~/certbot/conf/:/etc/nginx/ssl/:ro

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ~/certbot/www/:/var/www/certbot/:rw
      - ~/certbot/conf/:/etc/letsencrypt/:rw

  scheduler:
    image: mcuadros/ofelia:latest
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - certbot
      - web
    labels:
      ofelia.enabled: "true"
      ofelia.job-run.renewcertificate.schedule: "00 13 * * *"
      ofelia.job-run.renewcertificate.command: "renew"
      ofelia.job-run.renewcertificate.image: "certbot/certbot:latest"
      ofelia.job-run.renewcertificate.volume: "/home/ec2-user/certbot/www/:/var/www/certbot/:rw"
      ofelia.job-run.renewcertificate.volume: "/home/ec2-user/certbot/conf/:/etc/letsencrypt/:rw"


volumes:
  postgres_data:
  static_volume:

